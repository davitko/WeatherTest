<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>

	<groupId>netgloo</groupId>
	<artifactId>spring-boot-mysql-springdatajpa-hibernate</artifactId>
	<version>1.0</version>

	<name>spring-boot-mysql-springdatajpa-hibernate</name>
	<description>Use Spring Data JPA + Hibernate + MySQL in Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
		<relativePath />
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.data</groupId> -->
		<!-- <artifactId>spring-data-jpa</artifactId> -->
		<!-- <version>1.10.5.RELEASE</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- Davitkovic API -->
		<!-- *************** -->
		<!-- FileFn -->
		<!-- *************** -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- RestFn -->
		<!-- *************** -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>

		<!-- StringFn -->
		<!-- *************** -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>
		<dependency>
			<groupId>info.debatty</groupId>
			<artifactId>java-string-similarity</artifactId>
			<version>0.21</version>
		</dependency>



		<!-- NTP Time -->
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.5</version>
		</dependency>

		<!-- JSP Pages -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-spec</artifactId>
			<version>1.2.5</version>
		</dependency>

		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-impl</artifactId>
			<version>1.2.5</version>
		</dependency>

		<!-- CSV files -->
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>





	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>netgloo.Application</start-class>
		<java.version>1.8</java.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.4.2.RELEASE</version>

				<configuration>
					<addResources>true</addResources>
					<mainClass>${start-class}</mainClass>
					<layout>WAR</layout>
					<!-- <layout>ZIP</layout> -->
					<!-- <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debug.port} -->
					<!-- </jvmArguments> -->
					<!-- <profiles> -->
					<!-- <profile>test</profile> -->
					<!-- </profiles> -->
					<!-- When addResources is enabled, any src/main/resources folder will 
						be added to the application classpath when you run the application and any 
						duplicate found in target/classes will be removed. This allows hot refreshing 
						of resources which can be very useful when developing web applications. For 
						example, you can work on HTML, CSS or JavaScript files and see your changes 
						immediately without recompiling your application. It is also a helpful way 
						of allowing your front end developers to work without needing to download 
						and install a Java IDE. -->
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- repackage: create a jar or war file that is auto-executable. 
								It can replace the regular artifact or can be attached to the build lifecycle 
								with a separate classifier. -->
							<goal>repackage</goal>
							<!-- repackages a jar or war that is built during the package phase 
								of the Maven lifecycle, including any provided dependencies that are defined 
								in the project. -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
